# Напишите программу, которая принимает на вход вещественное число и
# показывает сумму его цифр.
# Пример:
# - 6782 -> 23
# - 0,56 -> 11
# РНШЕНИЕ:
# n = float(input('введите вещественное число: '))
# str_n = str(n)  # число в строку
# str_n = str_n.replace('.', '')  # производим замену десятичного разделителя
# lst_str = list(str_n)  # строку с числом в список строк с цифрами
# lst_num = map(int, lst_str)  # преобразовываем каждый элемент полученного списка строк с цифрами в список целых чисел
# s = sum(lst_num)
# print(s)
# РЕШЕНИЕ с вебинара
number = input('введите число: ')
summ = 0
for symbol in number:
    if symbol != '.' and symbol != "-":
        summ += int(symbol)  # чтобы превратить строку в число
print(summ)

# РЕШЕНИЕ  АЛГОРИТМИЧЕСКИМ СПОСОБОМ только целые числа
# Sum = 0
# while n != 0:
#     Sum += n % 10
#     n /= 10
# print(int(Sum))
# print(f'Сумма цифр числа  {Sum}')
# # =========================================
# Напишите программу, которая принимает на вход число N и
# выдает набор произведений чисел от 1 до N.
# Пример:
# - пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)
# РЕШЕНИЕ
# n = input('введите число: ')
#
# def fac(n):
#     if n in [1]:
#         return 1
#     else:
#         return n * fac(n - 1)
#     
# list = []
# for e in range(1, 5):
#     list.append(fac(e))
# print(list)  # 1 2 6 24
# =================================================================

# Задайте список из n чисел последовательности $(1+\frac 1 n)^n$ и
# выведите на экран их сумму.
# Пример:
# - Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}
# РЕШЕНИЕ
# import math
#
# n = int(input('введите число: '))
# print('{', end='')
# for i in range(1, n):
#     print(f'{i}:{round(math.pow(1 + (1 / i), i), 2)}', end=', ')
# print(f'{n}:{round(math.pow(1 + (1 / n), n), 2)}', end='}')
# sum = 0
# for i in range(1, n+1):
#     sum +=round(math.pow(1 + (1 / i), i), 2)
#
# print(f'  сумма = {sum} ')
# =====================================================================
# Задайте список из N элементов, заполненных числами
# из промежутка [-N, N]. Найдите произведение элементов на указанных позициях.
# Позиции хранятся в файле file.txt в одной строке одно число.
# Реализуйте алгоритм перемешивания списка.
# from random import *
#
# n = int(input('Введите количество элементов'))
# some_list = []
# for _ in range(n):
#     some_list.append(randint(-n, n))
# print(some_list)
# with open('file.txt', 'w', encoding='utf-8') as f:
#     for _ in range(randint(1, n)):
#         f.write(str(randint(0, n - 1)) + '\n')
# fact = 1
# with open('file.txt', 'r', encoding='utf-8') as f:
#     f = f.read().splitlines()
# for number in f:
#     fact *= some_list[int(number)]
# print(fact)

# =========================================================
# ДОП. задача на алгоритмы с реальных собеседований
# Даны два массива:
# [1, 2, 3, 2, 0] и [5, 1, 2, 7, 3, 2]
# Надо вернуть их пересечение
# [1, 2, 2, 3]  (порядок не важен)

# first_list = [1, 2, 3, 2, 0]
# second_list = [5, 1, 2, 7, 3, 2]
# math_list=[]
# for i in first_list:
#     if i in second_list:
#         math_list.append(i)
# print(math_list)
